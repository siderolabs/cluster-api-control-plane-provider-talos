---
kind: pipeline
name: default
type: kubernetes

services:
  - name: docker
    image: docker:25.0.2-dind
    entrypoint: [dockerd]
    privileged: true
    volumes:
      - name: docker-socket
        path: /var/run

steps:
  - name: setup-ci
    image: autonomy/build-container:latest
    commands:
      - setup-ci
    privileged: true
    volumes:
      - name: docker-socket
        path: /var/run
      - name: outerdockersock
        path: /var/outer-run
      - name: docker
        path: /root/.docker/buildx

  - name: build-pull-request
    image: autonomy/build-container:latest
    pull: always
    environment:
      PLATFORM: linux/amd64,linux/arm64
      PUSH: true
      REGISTRY: registry.dev.talos-systems.io
    commands:
      - make
      - make check-dirty
    when:
      event:
        include:
          - pull_request
    volumes:
      - name: docker-socket
        path: /var/run
      - name: outerdockersock
        path: /var/outer-run
      - name: docker
        path: /root/.docker/buildx

  - name: build-and-publish
    image: autonomy/build-container:latest
    pull: always
    environment:
      GHCR_USERNAME:
        from_secret: ghcr_username
      GHCR_PASSWORD:
        from_secret: ghcr_token
      PLATFORM: linux/amd64,linux/arm64
    commands:
      - docker login --username "$${GHCR_USERNAME}" --password "$${GHCR_PASSWORD}" ghcr.io
      - make PUSH=true
    when:
      event:
        exclude:
          - pull_request
    volumes:
      - name: docker-socket
        path: /var/run
      - name: outerdockersock
        path: /var/outer-run
      - name: docker
        path: /root/.docker/buildx

  - name: unit-tests
    image: autonomy/build-container:latest
    pull: always
    environment:
      PLATFORM: linux/amd64,linux/arm64
    commands:
      - make unit-tests
    when:
      event:
        include:
          - pull_request
    volumes:
      - name: docker-socket
        path: /var/run
      - name: outerdockersock
        path: /var/outer-run
      - name: docker
        path: /root/.docker/buildx

  - name: e2e-aws
    image: autonomy/build-container:latest
    pull: always
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      CI: true
      REGISTRY: registry.dev.talos-systems.io
      GITHUB_TOKEN:
        from_secret: github_token
    when:
      event:
        include:
          - pull_request
    commands:
      - make integration-test
    volumes:
      - name: docker-socket
        path: /var/run
      - name: outerdockersock
        path: /var/outer-run
      - name: docker
        path: /root/.docker/buildx

  - name: e2e-aws-release
    image: autonomy/build-container:latest
    pull: always
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      CI: true
      GITHUB_TOKEN:
        from_secret: github_token
    when:
      event:
        - tag
    commands:
      - make integration-test
    volumes:
      - name: docker-socket
        path: /var/run
      - name: outerdockersock
        path: /var/outer-run
      - name: docker
        path: /root/.docker/buildx

  - name: build-release
    image: autonomy/build-container:latest
    pull: always
    commands:
      - make release
    when:
      event:
        - tag
    volumes:
      - name: docker-socket
        path: /var/run
      - name: outerdockersock
        path: /var/outer-run
      - name: docker
        path: /root/.docker/buildx

  - name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      checksum:
        - sha256
        - sha512
      draft: true
      files:
        - _out/control-plane-talos/*/*
      note: _out/RELEASE_NOTES.md
    when:
      event:
        - tag

volumes:
  - name: docker-socket
    temp: {}
  - name: outerdockersock
    host:
      path: /var/ci-docker
  - name: docker
    temp: {}
---
kind: pipeline
name: notify
type: kubernetes

clone:
  disable: true

steps:
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: proj-talos-maintainers
    when:
      status:
        - success
        - failure

trigger:
  status:
    - success
    - failure

depends_on:
  - default
---
kind: signature
hmac: eeb94937711d209fb900a20a2bef3dac019313017914269a7e7bcf896d8d7e16

...
